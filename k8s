In my previous role at J.P. Morgan, I was part of a team responsible for enabling Amazon EKS (Elastic Kubernetes Service) as a platform for our internal users to deploy applications. While the platform itself was made available, I quickly realized there was a significant gap: there was no clear user journey or framework that allowed developers to seamlessly build, containerize, and deploy their applications to EKS.

Taking initiative, I took end-to-end ownership of the CI/CD process and led the design and development of a comprehensive internal framework. This framework allowed users to build and containerize their applications locally, and deploy them consistently across both private and public cloud environments.

Given the scale of J.P. Morgan, where thousands of engineers rely on central tooling, it was essential that the solution be highly scalable, resilient, and intuitive. I focused heavily on user experience — collaborating closely with developers to understand pain points, running usability sessions, and iterating on feedback. My goal was to ensure that the journey from code to production felt seamless and intuitive.

The end result was a unified pipeline that abstracted away complexity, minimized friction, and empowered engineers to deliver faster and more reliably. Adoption grew rapidly across teams, and the framework became a foundational part of the firm’s cloud-native development process.

This experience taught me the importance of designing with empathy and scale in mind — ensuring the solution not only solves a technical problem but also delights the end user.


0-------
In my current role leading the Container Security team, I’ve been at the forefront of introducing and standardizing engineering methods and processes across the Cybersecurity and Technology Controls (CISO) organization at J.P. Morgan. My focus has been on driving integration, reuse, and quality through strategic partnerships and tooling enablement.

One of my key initiatives was partnering with the Runtime Observability and Detection (ROD) team to extend their platform beyond the CIB (Corporate & Investment Bank) sector. I was the first to bring ROD into the CISO organization, setting a precedent by successfully integrating it with our security frameworks and demonstrating its value. I established best practices and reusable patterns for its use within CISO and have since supported other teams in adopting ROD to ensure consistency and alignment with broader firm-wide goals.

Similarly, I collaborated with the Kaizen team, working closely with stakeholders like Toby to bring their tooling into the CISO space. I took ownership of integrating Kaizen with our workflows, building foundational support that allowed for repeatable use across multiple security teams. In both cases, I didn’t just onboard the tools — I acted as the point person to drive awareness, remove blockers, and create standardized implementation paths for other teams to follow.

Through these efforts, I’ve helped shape a culture of engineering excellence, where high-quality, secure, and standardized processes are not only adopted but reused across teams. I’m proud to be a trusted partner within the CISO org — someone who can bridge strategy and execution to deliver scalable engineering solutions that raise the bar across the board.


-------
When I joined J.P. Morgan, there was no formal container security service in place. Recognizing this critical gap, I took the initiative to design and develop an in-house solution called VSaaS (Vulnerability Scanning as a Service). This tool was built from the ground up to address container security at scale and integrate seamlessly into our development ecosystem.

VSaaS is now a core part of our CI/CD pipeline and is tightly integrated with major CI tools like LSC, LSE, and Enterprise Jenkins. It empowers developers to scan their container images early in the development cycle, enabling a true “shift-left” security approach. Today, VSaaS handles over 140,000 scan requests per month and is used across all lines of business — playing a critical role in improving the firm’s overall security posture.

In addition to VSaaS, I led the design and implementation of the Third-Party Image Ingestion Pipeline, which enables development teams to onboard external container images securely and efficiently. Previously, this process was manual, time-consuming (often taking months), and error-prone. With the new pipeline, teams can bring in secure, compliant third-party images in less than a day, dramatically improving both productivity and security.

By identifying core pain points, building scalable internal tooling, and driving adoption across the firm, I’ve not only introduced key engineering processes but have also raised the standard for how container security is embedded into our software delivery lifecycle.


--------
Supporting and developing junior engineers has been a key part of my role, and it’s something I’m deeply passionate about. Last year, when we onboarded around 10 new graduates across our cross-functional teams, I took the initiative to design and run a Graduate Learning Program. This multi-month program was built to ease their transition into the firm and equip them with strong technical and professional foundations.

I organized and delivered a series of structured learning sessions covering a wide range of essential topics — from Cloud, Containers, and Programming best practices to Testing strategies and internal strategic tools at J.P. Morgan. I also created hands-on opportunities for them to present and lead discussions, helping build their confidence and communication skills. The program received overwhelmingly positive feedback and continues to be a key part of our graduate onboarding experience.

Beyond structured programs, I actively mentor engineers across levels, from junior developers to VPs, both within my team and across the wider organization. I provide guidance on career development, technical direction, and leadership growth.

I'm also proud to be part of several firmwide mentorship initiatives, including:

EO&T Global Mentoring Program
Caliber Global Leadership Accelerator Program
EO&T Diversity Operating Committee
Through these programs, I support diverse talent across the organization, helping individuals advance their careers, build confidence, and grow both professionally and personally.

Mentorship is not just about sharing knowledge — it's about creating a space for others to thrive, and that’s something I’ll always champion.


-----
My approach to writing and reviewing code is rooted in engineering excellence, clean architecture, and long-term maintainability. I believe in building software that is not only functional but also secure, scalable, and easy to understand and extend.

When writing code, I follow core design principles such as SOLID, apply relevant design patterns, and always consider time and space complexity — ensuring that solutions are both performant and sustainable. I draw inspiration from books like Clean Code and Effective Java, which reinforce the importance of writing clear, concise, and purpose-driven code. I also prioritize security by design, making sure potential risks are considered at the architecture level itself.

To uphold high standards across the team, I introduced automated quality gates into our pull request (PR) process. This includes tools like:

Black for consistent code formatting
isort for import sorting
flake8 and other linters for style and code quality enforcement
These tools help catch issues early and reduce noise in code reviews, so engineers can focus more on logic, architecture, and functionality rather than formatting inconsistencies.

As a key reviewer on my team — with my review being required before code reaches production — I take my role seriously. I provide candid, constructive feedback, and encourage discussions that promote learning and collective ownership. I don’t just look for correctness; I look for readability, test coverage, edge case handling, and how well the change aligns with our architecture and long-term goals.

Additionally, I created a comprehensive Code Contribution Guideline, which outlines expectations for code quality, testing, documentation, and secure development. This guideline is a living document — regularly reviewed and improved through team feedback — to ensure that it evolves with our practices.

Ultimately, my goal is to foster a culture where quality is never compromised, and where every line of code contributes to a stronger, more reliable system.


----
